# syntax=docker/dockerfile:1.3

# Copyright (c) 2024 by Alibaba.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

FROM trustee-registry.cn-hangzhou.cr.aliyuncs.com/daily/ubuntu:24.04 as builder
ARG ARCH=x86_64

WORKDIR /usr/src/trustee
COPY . .

# Install TPM Build Dependencies
RUN apt-get update && apt-get install -y git protobuf-compiler curl gnupg openssl clang libtss2-dev python3 python3-pip python3-dev libudev-dev pkg-config && \
rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustup component add rustfmt clippy

# Download and install kubectl
ARG KUBECTL_VERSION=v1.30.0
RUN curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && \
    chmod +x kubectl && \
    mv kubectl /usr/local/bin/kubectl

# Download and install helm
ARG HELM_VERSION=v3.14.0
RUN curl -fsSL -o helm.tar.gz https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz && \
    tar -zxvf helm.tar.gz && \
    mv linux-amd64/helm /usr/local/bin/helm && \
    rm -rf linux-amd64 helm.tar.gz
RUN helm plugin install https://github.com/AliyunContainerService/helm-acr

# Install NV Attestation SDK
RUN python3.12 -m pip install attestation-service/docker/nv_local_gpu_verifier-1.4.0-py3-none-any.whl --break-system-packages
RUN python3.12 -m pip install attestation-service/docker/nv_attestation_sdk-1.4.0-py3-none-any.whl --break-system-packages

# Install TDX Build Dependencies
RUN if [ "${ARCH}" = "x86_64" ]; then curl -L https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | tee intel-sgx-deb.key | apt-key add - && \
    echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu jammy main' | tee /etc/apt/sources.list.d/intel-sgx.list && \
    apt-get update && apt-get install -y libsgx-dcap-quote-verify-dev libtdx-attest-dev; fi

# Build and install client tool
RUN cargo build -p kbs-client --locked --release --no-default-features --features ci_test
RUN cp /usr/src/trustee/target/release/kbs-client /usr/local/bin/trustee-client

# Build and install evidence dump tool
RUN cargo build -p evidence-dump --locked --release
RUN cp /usr/src/trustee/target/release/evidence-dump /usr/local/bin/evidence-dump

# Copy test files to /root
RUN cp -r /usr/src/trustee/test-files/* /root/
RUN rm -rf /root/.kube/config && mkdir /root/.kube && cp /root/kube-config /root/.kube/config
WORKDIR /root